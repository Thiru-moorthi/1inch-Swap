{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "v4router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "fromTkn",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "in_data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Swap1inch.sol",
    "1": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Swap1inch.sol",
    "exportedSymbols": {
      "IERC20": [
        150
      ],
      "Swap1inch": [
        72
      ]
    },
    "id": 73,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 73,
        "sourceUnit": 151,
        "src": "58:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Swap1inch",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 72,
        "linearizedBaseContracts": [
          72
        ],
        "name": "Swap1inch",
        "nameLocation": "103:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "v4router_1inch",
            "nameLocation": "125:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 72,
            "src": "117:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "117:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13,
              "nodeType": "Block",
              "src": "172:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9,
                      "name": "v4router_1inch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "176:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10,
                      "name": "v4router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "193:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "176:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12,
                  "nodeType": "ExpressionStatement",
                  "src": "176:25:0"
                }
              ]
            },
            "id": 14,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "v4router",
                  "nameLocation": "162:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "154:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "154:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "153:18:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:0"
            },
            "scope": 72,
            "src": "142:63:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "290:298:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "302:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "313:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "302:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073776170",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "316:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49634e869fa32b71d894faf68159a2f7b21fe1fc3955af8389aaae5c3d343a44",
                          "typeString": "literal_string \"Invalid swap\""
                        },
                        "value": "Invalid swap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49634e869fa32b71d894faf68159a2f7b21fe1fc3955af8389aaae5c3d343a44",
                          "typeString": "literal_string \"Invalid swap\""
                        }
                      ],
                      "id": 23,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "294:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "294:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "294:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "364:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "364:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 38,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "384:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap1inch_$72",
                              "typeString": "contract Swap1inch"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap1inch_$72",
                              "typeString": "contract Swap1inch"
                            }
                          ],
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "376:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 36,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "376:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "376:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "391:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 31,
                            "name": "fromTkn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "342:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 30,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "335:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$150_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "335:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$150",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 131,
                      "src": "335:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "335:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "335:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47,
                        "name": "v4router_1inch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "442:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "458:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 44,
                            "name": "fromTkn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "425:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "418:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$150_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "418:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$150",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "418:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "418:49:0"
                },
                {
                  "assignments": [
                    52,
                    54
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "succ",
                      "nameLocation": "478:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "473:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "473:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54,
                      "mutability": "mutable",
                      "name": "rt",
                      "nameLocation": "497:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "484:15:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "484:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60,
                        "name": "in_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "532:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 57,
                            "name": "v4router_1inch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "511:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "503:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 55,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "503:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "503:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "503:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "503:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "472:68:0"
                },
                {
                  "condition": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "561:5:0",
                    "subExpression": {
                      "id": 63,
                      "name": "succ",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "562:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69,
                  "nodeType": "IfStatement",
                  "src": "558:27:0",
                  "trueBody": {
                    "id": 68,
                    "nodeType": "Block",
                    "src": "567:18:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 65,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "572:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "572:8:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67,
                        "nodeType": "ExpressionStatement",
                        "src": "572:8:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "1c6da724",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "218:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "231:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "223:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "fromTkn",
                  "nameLocation": "249:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "241:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "in_data",
                  "nameLocation": "272:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "257:22:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "222:58:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:0:0"
            },
            "scope": 72,
            "src": "209:379:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 73,
        "src": "94:496:0",
        "usedErrors": []
      }
    ],
    "src": "32:559:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161038838038061038883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6102f5806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631c6da72414610030575b600080fd5b61004361003e3660046101f1565b610045565b005b600084116100885760405162461bcd60e51b815260206004820152600c60248201526b0496e76616c696420737761760a41b604482015260640160405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156100db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ff9190610286565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529084169063095ea7b3906044016020604051808303816000875af1158015610153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101779190610286565b506000805460405182916001600160a01b03169061019890869086906102af565b6000604051808303816000865af19150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b5091509150816101e957600080fd5b505050505050565b6000806000806060858703121561020757600080fd5b8435935060208501356001600160a01b038116811461022557600080fd5b9250604085013567ffffffffffffffff8082111561024257600080fd5b818701915087601f83011261025657600080fd5b81358181111561026557600080fd5b88602082850101111561027757600080fd5b95989497505060200194505050565b60006020828403121561029857600080fd5b815180151581146102a857600080fd5b9392505050565b818382376000910190815291905056fea26469706673582212203ea1c5883cb3a553362e87fed2effd3117dc719d85eed1cc039c15c2ec69daab64736f6c634300080c0033",
  "bytecodeSha1": "95d05aa47aa2b7f850b2d6a2be0fdde141a98156",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Swap1inch",
  "coverageMap": {
    "branches": {
      "0": {
        "Swap1inch.swap": {
          "4": [
            302,
            314,
            true
          ],
          "5": [
            562,
            566,
            false
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "Swap1inch.swap": {
          "0": [
            294,
            331
          ],
          "1": [
            335,
            400
          ],
          "2": [
            418,
            467
          ],
          "3": [
            572,
            580
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80631c6da72414610030575b600080fd5b61004361003e3660046101f1565b610045565b005b600084116100885760405162461bcd60e51b815260206004820152600c60248201526b0496e76616c696420737761760a41b604482015260640160405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156100db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ff9190610286565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529084169063095ea7b3906044016020604051808303816000875af1158015610153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101779190610286565b506000805460405182916001600160a01b03169061019890869086906102af565b6000604051808303816000865af19150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b5091509150816101e957600080fd5b505050505050565b6000806000806060858703121561020757600080fd5b8435935060208501356001600160a01b038116811461022557600080fd5b9250604085013567ffffffffffffffff8082111561024257600080fd5b818701915087601f83011261025657600080fd5b81358181111561026557600080fd5b88602082850101111561027757600080fd5b95989497505060200194505050565b60006020828403121561029857600080fd5b815180151581146102a857600080fd5b9392505050565b818382376000910190815291905056fea26469706673582212203ea1c5883cb3a553362e87fed2effd3117dc719d85eed1cc039c15c2ec69daab64736f6c634300080c0033",
  "deployedSourceMap": "94:496:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;209:379;;;;;;:::i;:::-;;:::i;:::-;;;313:1;302:8;:12;294:37;;;;-1:-1:-1;;;294:37:0;;1054:2:2;294:37:0;;;1036:21:2;1093:2;1073:18;;;1066:30;-1:-1:-1;;;1112:18:2;;;1105:42;1164:18;;294:37:0;;;;;;;;335:65;;-1:-1:-1;;;335:65:0;;364:10;335:65;;;1433:34:2;384:4:0;1483:18:2;;;1476:43;1535:18;;;1528:34;;;-1:-1:-1;;;;;335:28:0;;;;;1368:18:2;;335:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;442:14:0;;418:49;;-1:-1:-1;;;418:49:0;;-1:-1:-1;;;;;442:14:0;;;418:49;;;2029:51:2;2096:18;;;2089:34;;;418:23:0;;;;;;2002:18:2;;418:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;473:9:0;511:14;;503:37;;473:9;;-1:-1:-1;;;;;511:14:0;;503:37;;532:7;;;;503:37;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;472:68;;;;562:4;558:27;;572:8;;;558:27;290:298;;209:379;;;;:::o;14:833:2:-;102:6;110;118;126;179:2;167:9;158:7;154:23;150:32;147:52;;;195:1;192;185:12;147:52;218:23;;;-1:-1:-1;291:2:2;276:18;;263:32;-1:-1:-1;;;;;324:31:2;;314:42;;304:70;;370:1;367;360:12;304:70;393:5;-1:-1:-1;449:2:2;434:18;;421:32;472:18;502:14;;;499:34;;;529:1;526;519:12;499:34;567:6;556:9;552:22;542:32;;612:7;605:4;601:2;597:13;593:27;583:55;;634:1;631;624:12;583:55;674:2;661:16;700:2;692:6;689:14;686:34;;;716:1;713;706:12;686:34;761:7;756:2;747:6;743:2;739:15;735:24;732:37;729:57;;;782:1;779;772:12;729:57;14:833;;;;-1:-1:-1;;813:2:2;805:11;;-1:-1:-1;;;14:833:2:o;1573:277::-;1640:6;1693:2;1681:9;1672:7;1668:23;1664:32;1661:52;;;1709:1;1706;1699:12;1661:52;1741:9;1735:16;1794:5;1787:13;1780:21;1773:5;1770:32;1760:60;;1816:1;1813;1806:12;1760:60;1839:5;1573:277;-1:-1:-1;;;1573:277:2:o;2134:271::-;2317:6;2309;2304:3;2291:33;2273:3;2343:16;;2368:13;;;2343:16;2134:271;-1:-1:-1;2134:271:2:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    94,
    590
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1C6DA724 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C6964207377617 PUSH1 0xA4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x286 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x286 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x198 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY LOG1 0xC5 DUP9 EXTCODECOPY 0xB3 0xA5 MSTORE8 CALLDATASIZE 0x2E DUP8 INVALID 0xD2 0xEF REVERT BALANCE OR 0xDC PUSH18 0x9D85EED1CC039C15C2EC69DAAB64736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        94,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1C6DA724"
    },
    "38": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        94,
        590
      ],
      "op": "REVERT",
      "path": "0"
    },
    "48": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "49": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "52": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E"
    },
    "55": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "56": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "58": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "61": {
      "fn": "Swap1inch.swap",
      "jump": "i",
      "offset": [
        209,
        588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "62": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "63": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45"
    },
    "66": {
      "fn": "Swap1inch.swap",
      "jump": "i",
      "offset": [
        209,
        588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "67": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "STOP",
      "path": "0"
    },
    "69": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "70": {
      "fn": "Swap1inch.swap",
      "offset": [
        313,
        314
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "72": {
      "fn": "Swap1inch.swap",
      "offset": [
        302,
        310
      ],
      "op": "DUP5",
      "path": "0"
    },
    "73": {
      "branch": 4,
      "fn": "Swap1inch.swap",
      "offset": [
        302,
        314
      ],
      "op": "GT",
      "path": "0"
    },
    "74": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "77": {
      "branch": 4,
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "78": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "80": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "81": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "85": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "87": {
      "op": "SHL"
    },
    "88": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "DUP2",
      "path": "0"
    },
    "89": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "90": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "92": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "94": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "DUP3",
      "path": "0"
    },
    "95": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "ADD",
      "path": "0"
    },
    "96": {
      "op": "MSTORE"
    },
    "97": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "99": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "101": {
      "op": "DUP3"
    },
    "102": {
      "op": "ADD"
    },
    "103": {
      "op": "MSTORE"
    },
    "104": {
      "op": "PUSH12",
      "value": "0x496E76616C6964207377617"
    },
    "117": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "119": {
      "op": "SHL"
    },
    "120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "122": {
      "op": "DUP3"
    },
    "123": {
      "op": "ADD"
    },
    "124": {
      "op": "MSTORE"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "127": {
      "op": "ADD"
    },
    "128": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "130": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "131": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "132": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "133": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "SUB",
      "path": "0"
    },
    "134": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "135": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "136": {
      "fn": "Swap1inch.swap",
      "offset": [
        294,
        331
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "139": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "140": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "145": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "147": {
      "op": "SHL"
    },
    "148": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "149": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "150": {
      "fn": "Swap1inch.swap",
      "offset": [
        364,
        374
      ],
      "op": "CALLER",
      "path": "0"
    },
    "151": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "153": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP3",
      "path": "0"
    },
    "154": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "ADD",
      "path": "0"
    },
    "155": {
      "op": "MSTORE"
    },
    "156": {
      "fn": "Swap1inch.swap",
      "offset": [
        384,
        388
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "159": {
      "op": "DUP3"
    },
    "160": {
      "op": "ADD"
    },
    "161": {
      "op": "MSTORE"
    },
    "162": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "ADD"
    },
    "166": {
      "op": "DUP6"
    },
    "167": {
      "op": "SWAP1"
    },
    "168": {
      "op": "MSTORE"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "175": {
      "op": "SHL"
    },
    "176": {
      "op": "SUB"
    },
    "177": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        363
      ],
      "op": "DUP5",
      "path": "0"
    },
    "178": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        363
      ],
      "op": "AND",
      "path": "0"
    },
    "179": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "180": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        363
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "185": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "188": {
      "op": "ADD"
    },
    "189": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "191": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "193": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "194": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP4",
      "path": "0"
    },
    "196": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "SUB",
      "path": "0"
    },
    "197": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "198": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP8",
      "path": "0"
    },
    "201": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "GAS",
      "path": "0"
    },
    "202": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "CALL",
      "path": "0"
    },
    "203": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "204": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "205": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "206": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB"
    },
    "209": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "210": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "211": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "213": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "215": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "216": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "218": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "REVERT",
      "path": "0"
    },
    "219": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "220": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "POP",
      "path": "0"
    },
    "221": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "POP",
      "path": "0"
    },
    "222": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "POP",
      "path": "0"
    },
    "223": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "POP",
      "path": "0"
    },
    "224": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "226": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "227": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "228": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "230": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "NOT",
      "path": "0"
    },
    "231": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "233": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP3",
      "path": "0"
    },
    "234": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "ADD",
      "path": "0"
    },
    "235": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "AND",
      "path": "0"
    },
    "236": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP3",
      "path": "0"
    },
    "237": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "ADD",
      "path": "0"
    },
    "238": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "241": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "242": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "POP",
      "path": "0"
    },
    "243": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "244": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "ADD",
      "path": "0"
    },
    "245": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "246": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "249": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "250": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "251": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286"
    },
    "254": {
      "fn": "Swap1inch.swap",
      "jump": "i",
      "offset": [
        335,
        400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "255": {
      "fn": "Swap1inch.swap",
      "offset": [
        335,
        400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "256": {
      "op": "POP"
    },
    "257": {
      "fn": "Swap1inch.swap",
      "offset": [
        442,
        456
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "259": {
      "fn": "Swap1inch.swap",
      "offset": [
        442,
        456
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "260": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "262": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "263": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "270": {
      "op": "SHL"
    },
    "271": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "272": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "op": "SUB"
    },
    "281": {
      "fn": "Swap1inch.swap",
      "offset": [
        442,
        456
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "282": {
      "fn": "Swap1inch.swap",
      "offset": [
        442,
        456
      ],
      "op": "DUP3",
      "path": "0"
    },
    "283": {
      "fn": "Swap1inch.swap",
      "offset": [
        442,
        456
      ],
      "op": "AND",
      "path": "0"
    },
    "284": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "286": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP3",
      "path": "0"
    },
    "287": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "ADD",
      "path": "0"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "291": {
      "op": "DUP2"
    },
    "292": {
      "op": "ADD"
    },
    "293": {
      "op": "DUP7"
    },
    "294": {
      "op": "SWAP1"
    },
    "295": {
      "op": "MSTORE"
    },
    "296": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        441
      ],
      "op": "DUP5",
      "path": "0"
    },
    "298": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        441
      ],
      "op": "AND",
      "path": "0"
    },
    "299": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "300": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        441
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "305": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        441
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "311": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "313": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "314": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "315": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP4",
      "path": "0"
    },
    "316": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "SUB",
      "path": "0"
    },
    "317": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "318": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "320": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP8",
      "path": "0"
    },
    "321": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "GAS",
      "path": "0"
    },
    "322": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "CALL",
      "path": "0"
    },
    "323": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "324": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "325": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "326": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "329": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "330": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "331": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "333": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "335": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "336": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "338": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "REVERT",
      "path": "0"
    },
    "339": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "POP",
      "path": "0"
    },
    "341": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "POP",
      "path": "0"
    },
    "342": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "POP",
      "path": "0"
    },
    "343": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "POP",
      "path": "0"
    },
    "344": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "346": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "347": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "348": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "350": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "NOT",
      "path": "0"
    },
    "351": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "353": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP3",
      "path": "0"
    },
    "354": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "ADD",
      "path": "0"
    },
    "355": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "AND",
      "path": "0"
    },
    "356": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP3",
      "path": "0"
    },
    "357": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "ADD",
      "path": "0"
    },
    "358": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "361": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "362": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "POP",
      "path": "0"
    },
    "363": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "364": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "ADD",
      "path": "0"
    },
    "365": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "366": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "369": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "370": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "371": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286"
    },
    "374": {
      "fn": "Swap1inch.swap",
      "jump": "i",
      "offset": [
        418,
        467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "Swap1inch.swap",
      "offset": [
        418,
        467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "op": "POP"
    },
    "377": {
      "fn": "Swap1inch.swap",
      "offset": [
        473,
        482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "379": {
      "fn": "Swap1inch.swap",
      "offset": [
        511,
        525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "380": {
      "fn": "Swap1inch.swap",
      "offset": [
        511,
        525
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "381": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "383": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "384": {
      "fn": "Swap1inch.swap",
      "offset": [
        473,
        482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "385": {
      "fn": "Swap1inch.swap",
      "offset": [
        473,
        482
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "op": "SUB"
    },
    "394": {
      "fn": "Swap1inch.swap",
      "offset": [
        511,
        525
      ],
      "op": "AND",
      "path": "0"
    },
    "395": {
      "fn": "Swap1inch.swap",
      "offset": [
        511,
        525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "396": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "399": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "400": {
      "fn": "Swap1inch.swap",
      "offset": [
        532,
        539
      ],
      "op": "DUP7",
      "path": "0"
    },
    "401": {
      "fn": "Swap1inch.swap",
      "offset": [
        532,
        539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "402": {
      "fn": "Swap1inch.swap",
      "offset": [
        532,
        539
      ],
      "op": "DUP7",
      "path": "0"
    },
    "403": {
      "fn": "Swap1inch.swap",
      "offset": [
        532,
        539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "404": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "407": {
      "fn": "Swap1inch.swap",
      "jump": "i",
      "offset": [
        503,
        540
      ],
      "op": "JUMP",
      "path": "0"
    },
    "408": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "411": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "413": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "414": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP1",
      "path": "0"
    },
    "415": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP4",
      "path": "0"
    },
    "416": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "SUB",
      "path": "0"
    },
    "417": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "418": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "420": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP7",
      "path": "0"
    },
    "421": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "GAS",
      "path": "0"
    },
    "422": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "CALL",
      "path": "0"
    },
    "423": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "424": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "POP",
      "path": "0"
    },
    "425": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "POP",
      "path": "0"
    },
    "426": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "427": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP1",
      "path": "0"
    },
    "428": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "430": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "431": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "EQ",
      "path": "0"
    },
    "432": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D5"
    },
    "435": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "436": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "438": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "439": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "440": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "POP",
      "path": "0"
    },
    "441": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "443": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "NOT",
      "path": "0"
    },
    "444": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "446": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "447": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "ADD",
      "path": "0"
    },
    "448": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "AND",
      "path": "0"
    },
    "449": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP3",
      "path": "0"
    },
    "450": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "ADD",
      "path": "0"
    },
    "451": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "453": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "454": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "455": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP3",
      "path": "0"
    },
    "456": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "457": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "458": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "460": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "462": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "DUP5",
      "path": "0"
    },
    "463": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "ADD",
      "path": "0"
    },
    "464": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "465": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "468": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "JUMP",
      "path": "0"
    },
    "469": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "470": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "472": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "473": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "POP",
      "path": "0"
    },
    "474": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "fn": "Swap1inch.swap",
      "offset": [
        503,
        540
      ],
      "op": "POP",
      "path": "0"
    },
    "476": {
      "fn": "Swap1inch.swap",
      "offset": [
        472,
        540
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "477": {
      "fn": "Swap1inch.swap",
      "offset": [
        472,
        540
      ],
      "op": "POP",
      "path": "0"
    },
    "478": {
      "fn": "Swap1inch.swap",
      "offset": [
        472,
        540
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "479": {
      "fn": "Swap1inch.swap",
      "offset": [
        472,
        540
      ],
      "op": "POP",
      "path": "0"
    },
    "480": {
      "branch": 5,
      "fn": "Swap1inch.swap",
      "offset": [
        562,
        566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "Swap1inch.swap",
      "offset": [
        558,
        585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "484": {
      "branch": 5,
      "fn": "Swap1inch.swap",
      "offset": [
        558,
        585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "485": {
      "fn": "Swap1inch.swap",
      "offset": [
        572,
        580
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "487": {
      "fn": "Swap1inch.swap",
      "offset": [
        572,
        580
      ],
      "op": "DUP1",
      "path": "0"
    },
    "488": {
      "fn": "Swap1inch.swap",
      "offset": [
        572,
        580
      ],
      "op": "REVERT",
      "path": "0"
    },
    "489": {
      "fn": "Swap1inch.swap",
      "offset": [
        558,
        585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "490": {
      "fn": "Swap1inch.swap",
      "offset": [
        290,
        588
      ],
      "op": "POP",
      "path": "0"
    },
    "491": {
      "fn": "Swap1inch.swap",
      "offset": [
        290,
        588
      ],
      "op": "POP",
      "path": "0"
    },
    "492": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "POP",
      "path": "0"
    },
    "493": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "POP",
      "path": "0"
    },
    "494": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "POP",
      "path": "0"
    },
    "495": {
      "fn": "Swap1inch.swap",
      "offset": [
        209,
        588
      ],
      "op": "POP",
      "path": "0"
    },
    "496": {
      "fn": "Swap1inch.swap",
      "jump": "o",
      "offset": [
        209,
        588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "497": {
      "op": "JUMPDEST"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "500": {
      "op": "DUP1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "503": {
      "op": "DUP1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "506": {
      "op": "DUP6"
    },
    "507": {
      "op": "DUP8"
    },
    "508": {
      "op": "SUB"
    },
    "509": {
      "op": "SLT"
    },
    "510": {
      "op": "ISZERO"
    },
    "511": {
      "op": "PUSH2",
      "value": "0x207"
    },
    "514": {
      "op": "JUMPI"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "517": {
      "op": "DUP1"
    },
    "518": {
      "op": "REVERT"
    },
    "519": {
      "op": "JUMPDEST"
    },
    "520": {
      "op": "DUP5"
    },
    "521": {
      "op": "CALLDATALOAD"
    },
    "522": {
      "op": "SWAP4"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "526": {
      "op": "DUP6"
    },
    "527": {
      "op": "ADD"
    },
    "528": {
      "op": "CALLDATALOAD"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "op": "DUP2"
    },
    "538": {
      "op": "AND"
    },
    "539": {
      "op": "DUP2"
    },
    "540": {
      "op": "EQ"
    },
    "541": {
      "op": "PUSH2",
      "value": "0x225"
    },
    "544": {
      "op": "JUMPI"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "547": {
      "op": "DUP1"
    },
    "548": {
      "op": "REVERT"
    },
    "549": {
      "op": "JUMPDEST"
    },
    "550": {
      "op": "SWAP3"
    },
    "551": {
      "op": "POP"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "554": {
      "op": "DUP6"
    },
    "555": {
      "op": "ADD"
    },
    "556": {
      "op": "CALLDATALOAD"
    },
    "557": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "566": {
      "op": "DUP1"
    },
    "567": {
      "op": "DUP3"
    },
    "568": {
      "op": "GT"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "PUSH2",
      "value": "0x242"
    },
    "573": {
      "op": "JUMPI"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "576": {
      "op": "DUP1"
    },
    "577": {
      "op": "REVERT"
    },
    "578": {
      "op": "JUMPDEST"
    },
    "579": {
      "op": "DUP2"
    },
    "580": {
      "op": "DUP8"
    },
    "581": {
      "op": "ADD"
    },
    "582": {
      "op": "SWAP2"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "op": "DUP8"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "587": {
      "op": "DUP4"
    },
    "588": {
      "op": "ADD"
    },
    "589": {
      "op": "SLT"
    },
    "590": {
      "op": "PUSH2",
      "value": "0x256"
    },
    "593": {
      "op": "JUMPI"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "596": {
      "op": "DUP1"
    },
    "597": {
      "op": "REVERT"
    },
    "598": {
      "op": "JUMPDEST"
    },
    "599": {
      "op": "DUP2"
    },
    "600": {
      "op": "CALLDATALOAD"
    },
    "601": {
      "op": "DUP2"
    },
    "602": {
      "op": "DUP2"
    },
    "603": {
      "op": "GT"
    },
    "604": {
      "op": "ISZERO"
    },
    "605": {
      "op": "PUSH2",
      "value": "0x265"
    },
    "608": {
      "op": "JUMPI"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "611": {
      "op": "DUP1"
    },
    "612": {
      "op": "REVERT"
    },
    "613": {
      "op": "JUMPDEST"
    },
    "614": {
      "op": "DUP9"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "617": {
      "op": "DUP3"
    },
    "618": {
      "op": "DUP6"
    },
    "619": {
      "op": "ADD"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "GT"
    },
    "622": {
      "op": "ISZERO"
    },
    "623": {
      "op": "PUSH2",
      "value": "0x277"
    },
    "626": {
      "op": "JUMPI"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "629": {
      "op": "DUP1"
    },
    "630": {
      "op": "REVERT"
    },
    "631": {
      "op": "JUMPDEST"
    },
    "632": {
      "op": "SWAP6"
    },
    "633": {
      "op": "SWAP9"
    },
    "634": {
      "op": "SWAP5"
    },
    "635": {
      "op": "SWAP8"
    },
    "636": {
      "op": "POP"
    },
    "637": {
      "op": "POP"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "640": {
      "op": "ADD"
    },
    "641": {
      "op": "SWAP5"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "op": "POP"
    },
    "644": {
      "op": "POP"
    },
    "645": {
      "jump": "o",
      "op": "JUMP"
    },
    "646": {
      "op": "JUMPDEST"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "651": {
      "op": "DUP3"
    },
    "652": {
      "op": "DUP5"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "op": "SLT"
    },
    "655": {
      "op": "ISZERO"
    },
    "656": {
      "op": "PUSH2",
      "value": "0x298"
    },
    "659": {
      "op": "JUMPI"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "662": {
      "op": "DUP1"
    },
    "663": {
      "op": "REVERT"
    },
    "664": {
      "op": "JUMPDEST"
    },
    "665": {
      "op": "DUP2"
    },
    "666": {
      "op": "MLOAD"
    },
    "667": {
      "op": "DUP1"
    },
    "668": {
      "op": "ISZERO"
    },
    "669": {
      "op": "ISZERO"
    },
    "670": {
      "op": "DUP2"
    },
    "671": {
      "op": "EQ"
    },
    "672": {
      "op": "PUSH2",
      "value": "0x2A8"
    },
    "675": {
      "op": "JUMPI"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "678": {
      "op": "DUP1"
    },
    "679": {
      "op": "REVERT"
    },
    "680": {
      "op": "JUMPDEST"
    },
    "681": {
      "op": "SWAP4"
    },
    "682": {
      "op": "SWAP3"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "op": "POP"
    },
    "685": {
      "op": "POP"
    },
    "686": {
      "jump": "o",
      "op": "JUMP"
    },
    "687": {
      "op": "JUMPDEST"
    },
    "688": {
      "op": "DUP2"
    },
    "689": {
      "op": "DUP4"
    },
    "690": {
      "op": "DUP3"
    },
    "691": {
      "op": "CALLDATACOPY"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "694": {
      "op": "SWAP2"
    },
    "695": {
      "op": "ADD"
    },
    "696": {
      "op": "SWAP1"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "SWAP2"
    },
    "700": {
      "op": "SWAP1"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4c3df28c57dd280284d9c00d64752937cebc03ec",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"../interfaces/IERC20.sol\";\n\ncontract Swap1inch{\n\t\n\taddress v4router_1inch;\n\tconstructor(address v4router) {\n\t\tv4router_1inch = v4router;\n\t}\n\t\n\tfunction swap(uint256 amountIn, address fromTkn,bytes calldata in_data) external {\n\t\trequire(amountIn > 0, \"Invalid swap\");\n\t\tIERC20(fromTkn).transferFrom(msg.sender, address(this), amountIn);\n                IERC20(fromTkn).approve(v4router_1inch, amountIn);\n\n\t\t(bool succ, bytes memory rt) = address(v4router_1inch).call(in_data);\n                if(!succ){\n\t\t\trevert();\n\t\t}\n\t}\n}\n",
  "sourceMap": "94:496:0:-:0;;;142:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;176:14;:25;;-1:-1:-1;;;;;;176:25:0;-1:-1:-1;;;;;176:25:0;;;;;;;;;;94:496;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;94:496:0;;;;;;",
  "sourcePath": "contracts/Swap1inch.sol",
  "type": "contract"
}